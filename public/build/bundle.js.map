{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Select.svelte","../../src/components/Input.svelte","../../src/components/NumInput.svelte","../../src/components/RangeInput.svelte","../../src/components/ColorInput.svelte","../../src/InputForm.svelte","../../src/schemas/Prism.svelte","../../src/schemas/Ring.svelte","../../src/schemas/Cylinder.svelte","../../src/Preview.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\texport let label;\n\texport let value = 0;\n\texport let onchange = null;\n</script>\n\n<label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\n\t{label}\n</label>\n<div class=\"relative mb-2\">\n\t<select class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n\t\tbind:value={value} on:change={onchange}>\n\t\t<slot />\n\t</select>\n\t<div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n\t<svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n\t</div>\n</div>","<script>\n    export let label, unit = null, hint = null, value;\n</script>\n\n<span class=\"uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n    {label}\n    {#if unit}\n        <span class=\"lowercase font-normal\">({unit})</span>\n    {/if}\n</span>\n<input class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n    bind:value={value} type=\"text\" placeholder={hint || null}>","<script>\n    export let label, unit = null, hint = null, value = 0;\n</script>\n\n<span class=\"uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n    {label}\n    {#if unit}\n        <span class=\"lowercase font-normal\">({unit})</span>\n    {/if}\n</span>\n<input class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n    bind:value={value} type=\"number\" placeholder={hint || null}>","<script>\n    export let label, unit = null, value = 0;\n    export let step = 1, min = 0, max = 100;\n</script>\n\n<span class=\"uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n    {label}\n    {#if unit}\n        <span class=\"lowercase font-normal\">({unit})</span>\n    {/if}\n</span>\n<input type=\"range\" bind:value={value} step={step} min={min} max={max} class=\"block w-full py-3 px-4 mb-3 leading-tight\">","<script>\n    export let label, unit = null, value;\n</script>\n\n<span class=\"uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n    {label}\n    {#if unit}\n        <span class=\"lowercase font-normal\">({unit})</span>\n    {/if}\n</span>\n<input class=\"appearance-none block w-full\"\n    bind:value={value} type=\"color\">","<script>\n\timport Select from './components/Select.svelte';\n\timport Input from './components/Input.svelte';\n\timport NumInput from './components/NumInput.svelte';\n\timport RangeInput from './components/RangeInput.svelte';\n\timport ColorInput from './components/ColorInput.svelte';\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let rp;\n</script>\n\n<form class=\"w-full min-w-sm\">\n\t<Select label=\"Magnet Type\" bind:value={rp.type} onchange={() => dispatch('newtype')}>\n\t\t<option value={0}>Prism</option>\n\t\t<option value={1}>Ring</option>\n\t\t<option value={2}>Cylinder</option>\n\t</Select>\n\t{#if rp.type == 0}\n\t\t<NumInput label=\"Height\" unit=\"mm\" hint=\"10\" bind:value={rp.dim.height} />\n\t\t<NumInput label=\"Width\" unit=\"mm\" hint=\"10\" bind:value={rp.dim.width} />\n\t\t<NumInput label=\"Depth\" unit=\"mm\" hint=\"10\" bind:value={rp.dim.depth} />\n\t{:else if rp.type == 1}\n\t\t<NumInput label=\"Width\" unit=\"mm\" hint=\"5\" bind:value={rp.dim.width} />\n\t\t<NumInput label=\"Height\" unit=\"mm\" hint=\"10\" bind:value={rp.dim.height} />\n\t\t<NumInput label=\"Inner Radius\" unit=\"mm\" hint=\"3\" bind:value={rp.dim.radius} />\n\t{:else if rp.type == 2}\n\t\t<NumInput label=\"Width\" unit=\"mm\" hint=\"300\" bind:value={rp.dim.width} />\n\t\t<NumInput label=\"Height\" unit=\"mm\" hint=\"300\" bind:value={rp.dim.height} />\n\t{/if}\n\n\t<div class=\"flex flex-wrap -mx-2\">\n\t\t<div class=\"w-full md:w-1/2 px-2\">\n\t\t\t<RangeInput label=\"Perspective\" bind:value={rp.perspective} min=\"0.001\" max=\"0.3\" step=\"0.001\" />\n\t\t</div>\n\t\t<div class=\"w-full md:w-1/2 px-2\">\n\t\t\t<RangeInput label=\"Scale\" bind:value={rp.scale} min=\"0.001\" max=\"2\" step=\"0.001\" />\n\t\t</div>\n\t</div>\n\n\t<div class=\"flex flex-wrap -mx-2 mb-2\">\n\t\t<div class=\"w-full md:w-1/2 px-2\">\n\t\t\t<NumInput label=\"Left Margin\" unit=\"px\" hint=\"10\" bind:value={rp.dim.left} />\n\t\t</div>\n\t\t<div class=\"w-full md:w-1/2 px-2\">\n\t\t\t<NumInput label=\"Top Margin\" unit=\"px\" hint=\"10\" bind:value={rp.dim.top} />\n\t\t</div>\n\t</div>\n\n\t<div class=\"flex flex-wrap -mx-2 mb-2\">\n\t\t<div class=\"w-full md:w-1/2 px-2\">\n\t\t\t<ColorInput label=\"First Color\" unit=\"hex\" bind:value={rp.colors.first} />\n\t\t</div>\n\t\t<div class=\"w-full md:w-1/2 px-2\">\n\t\t\t<ColorInput label=\"Second Color\" unit=\"hex\" bind:value={rp.colors.second} />\n\t\t</div>\n\t</div>\n\n\t<div class=\"flex flex-wrap -mx-2 mb-2\">\n\t\t<div class=\"w-full md:w-2/3 px-2\">\n\t\t\t<Input label=\"File Name\" bind:value={rp.fileName} />\n\t\t</div>\n\t\t<div class=\"w-full md:w-1/3 px-2\">\n\t\t\t<Select label=\"File Type\" bind:value={rp.fileType}>\n\t\t\t\t<option value={0}>SVG</option>\n\t\t\t\t<option value={1}>JPG</option>\n\t\t\t\t<option value={2}>PNG</option>\n\t\t\t</Select>\n\t\t</div>\n\t</div>\n\n\t<div class=\"flex justify-center space-x-2 mb-2\">\n\t\t<button class=\"shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n\t\t\ton:click|preventDefault={() => dispatch('exportimg')}>\n\t\t\tExport\n\t\t</button>\n\t\t<button class=\"shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n\t\t\ton:click|preventDefault={() => dispatch('save')}>\n\t\t\tSave Preset\n\t\t</button>\n\t\t<button class=\"shadow bg-purple-500 hover:bg-purple-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n\t\t\ton:click|preventDefault={() => dispatch('load')}>\n\t\t\tLoad Preset\n\t\t</button>\n  \t</div>\n</form>","<script>\n    export let svg;\n    export let renderParams;\n    $: ({ top, left, width, height, depth } = renderParams.normalDim);\n    let colors;\n    $: ({ colors } = renderParams);\n\n    let alpha, top_height, top_width, ll_h, ll_w;\n    $: alpha = renderParams.perspective * Math.PI/2 /0.3;\n    $: if(alpha < Math.PI/12) alpha = Math.PI/12;\n    $: top_height = depth * Math.sin(alpha);\n    $: top_width = depth * Math.cos(alpha);\n    $: ll_h = 16 * Math.cos(alpha);\n    $: ll_w = 16 * Math.sin(alpha);\n</script>\n\n<svg bind:this={svg} viewBox={`0 0 ${640/renderParams.scale} ${440/renderParams.scale}`} xmlns=\"http://www.w3.org/2000/svg\">\n    <style>\n        .arrow-marker {\n            fill: #999;\n        }\n\n        .arrow-dimension-line {\n            fill: none;\n            stroke-width: 0.75;\n            stroke: #999;\n        }\n\n        .arrow,\n        .arrow-inverted-start,\n        .arrow-inverted-end {\n            fill: none;\n            stroke-width: 1.5;\n            stroke: #999;\n        }\n\n        .arrow {\n            marker-start: url(#arrow-start);\n            marker-end: url(#arrow-end);\n        }\n\n        .arrow-inverted-start {\n            marker-end: url(#arrow-inverted-start);\n        }\n\n        .arrow-inverted-end {\n            marker-start: url(#arrow-inverted-end);\n        }\n\n        .border {\n            stroke-width: 2;\n            stroke: black;\n        }\n    </style>\n    <defs>\n        <marker id=\"arrow-start\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"6.6666666666667\" refY=\"2.5\">\n            <path d=\"M10 0V5L0 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-end\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"3.3333333333333\" refY=\"2.5\">\n            <path d=\"M0 0V5L10 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-inverted-start\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"3.3333333333333\"\n            refY=\"2.5\">\n            <path d=\"M0 0V5L10 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-inverted-end\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"6.6666666666667\"\n            refY=\"2.5\">\n            <path d=\"M10 0V5L0 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <clipPath id=\"north-clip\">\n            <path d={`M${left} ${top+top_height}L${left+top_width} ${top}H${left+top_width+width}V${top+height/2}L${left+width} ${top+top_height+height/2}H${left}Z`}\n                fill={colors.first} />\n        </clipPath>\n    </defs>\n    <path d={`M${left} ${top+top_height}L${left+top_width} ${top}H${left+top_width+width}V${top+height}L${left+width} ${top+top_height+height}H${left}Z`}\n        fill={colors.second} />\n    <path d={`M${left} ${top+top_height}L${left+top_width} ${top}H${left+top_width+width}V${top+height}L${left+width} ${top+top_height+height}H${left}Z`}\n        fill={colors.first} clip-path=\"url(#north-clip)\" />\n    <path d={`M${left} ${top+top_height+height+3}v16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width} ${top+top_height+height+3}v16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+10} ${top+top_height+height+14}h${width-2*10}`} class=\"arrow\" />\n    <text x={left+width/2} y={top+top_height+height+34} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:middle;\">{renderParams.dim.width} mm</text>\n    <path d={`M${left+top_width+width+3} ${top}h16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+top_width+width+3} ${top+height}h16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+top_width+width+11} ${top+10}v${height-2*10}`} class=\"arrow\" />\n    <text x={left+top_width+width+24} y={top+height/2+10} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:left;\">{renderParams.dim.height} mm</text>\n    <path d={`M${left+width+3} ${top+top_height+height+3}l${ll_w} ${ll_h}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+top_width+width+3} ${top+height+3}l${ll_w} ${ll_h}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width+ll_w/2+3+Math.cos(alpha)*10} ${top+top_height+height+ll_h/2+3-Math.sin(alpha)*10}L${left+top_width+width+ll_w/2+3-Math.cos(alpha)*10} ${top+height+ll_h/2+3+Math.sin(alpha)*10}`} class=\"arrow\"/>\n    <text x={left+width+top_width/2} y={top+height+top_height/2+21} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:left;\" transform=\"translate(15, 15)\">{renderParams.dim.depth} mm</text>\n    <path d={`M${left} ${top+top_height}H${left+width}V${top+top_height+height}H${left}Z`} fill=\"none\" class=\"border\" />\n    <path d={`M${left} ${top+top_height}L${left+top_width} ${top}H${left+top_width+width}V${top+height}L${left+width} ${top+top_height+height}`} fill=\"none\"\n        class=\"border\" />\n    <path d={`M${left+width} ${top+top_height}L${left+top_width+width} ${top}`} class=\"border\" />\n</svg>","<script>\n    export let svg;\n    export let renderParams;\n    let ttop = 0;\n    $: ({ top, left, width, height, radius } = renderParams.normalDim);\n    $: if(renderParams){\n        ttop = top;\n        top += 21 + 20;\n    }\n    let colors;\n    $: ({ colors } = renderParams);\n\n    let rad_y, inner_y;\n    $: rad_y = width * renderParams.perspective;\n    $: inner_y = rad_y * 2 * radius / width;\n\n    function darken(hex, lum) {\n        hex = String(hex).replace(/[^0-9a-f]/gi, '');\n        if (hex.length < 6) {\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        lum = lum || 0;\n\n        var rgb = \"#\", c, i;\n        for (i = 0; i < 3; i++) {\n            c = parseInt(hex.substr(i * 2, 2), 16);\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n            rgb += (\"00\" + c).substr(c.length);\n        }\n\n        return rgb;\n    }\n</script>\n\n<svg bind:this={svg} viewBox={`0 0 ${640/renderParams.scale} ${440/renderParams.scale}`} xmlns=\"http://www.w3.org/2000/svg\">\n    <style>\n        .border {\n            stroke-width: 2;\n            stroke: black;\n        }\n\n        .arrow-marker {\n            fill: #999;\n        }\n\n        .arrow-dimension-line {\n            fill: none;\n            stroke-width: 0.75;\n            stroke: #999;\n        }\n\n        .arrow,\n        .arrow-inverted-start,\n        .arrow-inverted-end {\n            fill: none;\n            stroke-width: 1.5;\n            stroke: #999;\n        }\n\n        .arrow {\n            marker-start: url(#arrow-start);\n            marker-end: url(#arrow-end);\n        }\n\n        .arrow-inverted-start {\n            marker-end: url(#arrow-inverted-start);\n        }\n\n        .arrow-inverted-end {\n            marker-start: url(#arrow-inverted-end);\n        }\n    </style>\n    <defs>\n        <mask id=\"mask-hole\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <ellipse cx={left+width/2} cy={top+rad_y} rx={radius} ry={inner_y} fill=\"black\" />\n        </mask>\n        <clipPath id=\"clip-hole\">\n            <ellipse cx={left+width/2} cy={top+rad_y} rx={radius} ry={inner_y} />\n        </clipPath>\n        <mask id=\"mask-hole-bottom\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <ellipse cx={left+width/2} cy={top+rad_y-inner_y} rx={radius} ry={inner_y} fill=\"black\" />\n        </mask>\n        <mask id=\"mask-hole-south-pole\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <ellipse cx={left+width/2} cy={top+rad_y+height/2} rx={radius} ry={inner_y} fill=\"black\" />\n        </mask>\n        <clipPath id=\"magnet-clip\">\n            <path d={`M${left} ${top+rad_y}a${width/2} ${rad_y} 0 0 1 ${width} 0 v${height} a${width/2} ${rad_y} 0 0 1 ${-width} 0 z`} />\n        </clipPath>\n        <clipPath id=\"north-clip\">\n            <path d={`M${left} ${top+rad_y}a${width/2} ${rad_y} 0 0 1 ${width} 0 v${height/2} a${width/2} ${rad_y} 0 0 1 ${-width} 0 z`} />\n        </clipPath>\n        <marker id=\"arrow-start\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"6.6666666666667\" refY=\"2.5\">\n            <path d=\"M10 0V5L0 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-end\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"3.3333333333333\" refY=\"2.5\">\n            <path d=\"M0 0V5L10 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-inverted-start\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"3.3333333333333\"\n            refY=\"2.5\">\n            <path d=\"M0 0V5L10 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-inverted-end\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"6.6666666666667\"\n            refY=\"2.5\">\n            <path d=\"M10 0V5L0 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n    </defs>\n    <path d={`M${left+width/2-radius} ${ttop+21+3}L${left+width/2-radius} ${top+rad_y}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width/2+radius} ${ttop+21+3}L${left+width/2+radius} ${top+rad_y}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width/2-radius+10} ${ttop+21+10}h${2*radius-2*10}`} class=\"arrow\" />\n    <text x={left+width/2} y={ttop+21} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"text-anchor:middle;fill:#999;\">{2*renderParams.dim.radius} mm</text>\n    <g mask=\"url(#mask-hole)\">\n        <rect x={left} y={top} width={width} height={top+rad_y+height+rad_y} style=\"clip-path:url(#magnet-clip);\" fill={colors.second} />\n        <rect x={left} y={top} width={width} height={top+rad_y+height+rad_y} style=\"clip-path:url(#north-clip);\" fill={colors.first} />\n    </g>\n    <rect x={left+width/2-radius} y={top+rad_y-inner_y} width={2*radius} height={height+inner_y} fill={darken(colors.second, -1/4)} clip-path=\"url(#clip-hole)\"\n        mask=\"url(#mask-hole-bottom)\" />\n    <rect x={left+width/2-radius} y={top+rad_y-inner_y} width={2*radius} height={height/2+inner_y} fill={darken(colors.first, -1/4)} clip-path=\"url(#clip-hole)\"\n        mask=\"url(#mask-hole-south-pole)\" />\n    <!-- Arrows -->\n    <path d={`M${left+width+3} ${top+rad_y}h16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width+3} ${top+rad_y+height}h16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width+14} ${top+rad_y+10}v${height-2*10}`} class=\"arrow\" />\n    <text x={left+width+20} y={top+rad_y+height/2+21/2} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:left;\">{renderParams.dim.height} mm</text>\n    <path d={`M${left} ${top+rad_y+height+3}v${rad_y+7}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width} ${top+rad_y+height+3}v${rad_y+7}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+10} ${top+rad_y+height+rad_y+7}h${width-2*10}`} class=\"arrow\" />\n    <text x={left+width/2} y={top+rad_y+height+rad_y+30} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:middle;\">{renderParams.dim.width} mm</text>\n    <ellipse cx={left+width/2} cy={top+rad_y} rx={width/2} ry={rad_y} class=\"border\"\n        fill=\"none\" />\n    <path d={`M${left} ${top+rad_y+height}a${width/2} ${rad_y} 0 0 0 ${width} 0`} class=\"border\" fill=\"none\" />\n    <path d={`M${left} ${top+rad_y}v${height}`} class=\"border\" />\n    <path d={`M${left+width} ${top+rad_y}v${height}`} class=\"border\" />\n    <path d={`M${left+width/2-radius} ${top+rad_y-inner_y}a${radius} ${inner_y} 0 0 1 ${2*radius} 0`} class=\"border\" fill=\"none\" clip-path=\"url(#clip-hole)\" />\n    <ellipse cx={left+width/2} cy={top+rad_y} rx={radius} ry={inner_y} class=\"border\" fill=\"none\" />\n</svg>","<script>\n    export let svg;\n    export let renderParams;\n    $: ({ top, left, width, height } = renderParams.normalDim);\n    let colors;\n    $: ({ colors } = renderParams);\n    let rad_y;\n    $: rad_y = width * renderParams.perspective;\n</script>\n\n<svg bind:this={svg} viewBox={`0 0 ${640/renderParams.scale} ${440/renderParams.scale}`} xmlns=\"http://www.w3.org/2000/svg\">\n    <style>\n        .arrow-marker {\n            fill: #999;\n        }\n\n        .arrow-dimension-line {\n            fill: none;\n            stroke-width: 0.75;\n            stroke: #999;\n        }\n\n        .arrow,\n        .arrow-inverted-start,\n        .arrow-inverted-end {\n            fill: none;\n            stroke-width: 1.5;\n            stroke: #999;\n        }\n\n        .arrow {\n            marker-start: url(#arrow-start);\n            marker-end: url(#arrow-end);\n        }\n\n        .arrow-inverted-start {\n            marker-end: url(#arrow-inverted-start);\n        }\n\n        .arrow-inverted-end {\n            marker-start: url(#arrow-inverted-end);\n        }\n\n        .border {\n            stroke-width: 2;\n            stroke: black;\n        }\n    </style>\n    <defs>\n        <clipPath id=\"magnet-clip\">\n            <path\n                d={`M${left} ${top+rad_y}a${width/2} ${rad_y} 0 0 1 ${width} 0 v${height} a${width/2} ${rad_y} 0 0 1 ${-width} 0 z`} />\n        </clipPath>\n        <clipPath id=\"north-clip\">\n            <path\n                d={`M${left} ${top+rad_y}a${width/2} ${rad_y} 0 0 1 ${width} 0 v${height/2} a${width/2} ${rad_y} 0 0 1 ${-width} 0 z`} />\n        </clipPath>\n        <marker id=\"arrow-start\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"6.6666666666667\" refY=\"2.5\">\n            <path d=\"M10 0V5L0 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-end\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"3.3333333333333\" refY=\"2.5\">\n            <path d=\"M0 0V5L10 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-inverted-start\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"3.3333333333333\"\n            refY=\"2.5\">\n            <path d=\"M0 0V5L10 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n        <marker id=\"arrow-inverted-end\" orient=\"auto\" markerWidth=\"10\" markerHeight=\"5\" refX=\"6.6666666666667\"\n            refY=\"2.5\">\n            <path d=\"M10 0V5L0 2.5Z\" class=\"arrow-marker\" />\n        </marker>\n    </defs>\n    <g>\n        <rect x={left} y={top} width={width} height={top+rad_y+height+rad_y} style={`clip-path:url(#magnet-clip);fill:${colors.second}`} />\n        <rect x={left} y={top} width={width} height={top+rad_y+height+rad_y} style={`clip-path:url(#north-clip);fill:${colors.first}`} />\n    </g>\n    <path d={`M${left+width+3} ${top+rad_y}h16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width+3} ${top+rad_y+height}h16`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width+14} ${top+rad_y+10}v${height-2*10}`} class=\"arrow\" />\n    <text x={left+width+20} y={top+rad_y+height/2+21/2} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:left;\">{renderParams.dim.height} mm</text>\n    <path d={`M${left} ${top+rad_y+height+3}v${rad_y+7}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+width} ${top+rad_y+height+3}v${rad_y+7}`} class=\"arrow-dimension-line\" />\n    <path d={`M${left+10} ${top+rad_y+height+rad_y+7}h${width-2*10}`} class=\"arrow\" />\n    <text x={left+width/2} y={top+rad_y+height+rad_y+30} font-size=\"21\" font-family=\"Arial, Helvetica, sans-serif\"\n        style=\"fill:#999;text-anchor:middle;\">{renderParams.dim.width} mm</text>\n    <ellipse cx={left+width/2} cy={top+rad_y} rx={width/2} ry={rad_y} class=\"border\"\n        fill=\"none\" />\n    <path d={`M${left} ${top+rad_y+height}a${width/2} ${rad_y} 0 0 0 ${width} 0`} class=\"border\" fill=\"none\" />\n    <path d={`M${left} ${top+rad_y}v${height}`} class=\"border\" />\n    <path d={`M${left+width} ${top+rad_y}v${height}`} class=\"border\" />\n</svg>","<script>\n    import Prism from './schemas/Prism.svelte';\n    import Ring from './schemas/Ring.svelte';\n    import Cylinder from './schemas/Cylinder.svelte';\n\n    export let renderParams;\n    export let svg;\n</script>\n\n<div class=\"min-w-full h-full border-2 border-dashed rounded-md\">\n    {#if renderParams.type == 0}\n        <Prism renderParams={renderParams} bind:svg={svg} />\n    {:else if renderParams.type == 1}\n        <Ring renderParams={renderParams} bind:svg={svg} />\n    {:else if renderParams.type == 2}\n        <Cylinder renderParams={renderParams} bind:svg={svg} />\n    {/if}\n</div>","<style global lang=\"postcss\">\n\t@tailwind base;\n\t@tailwind components;\n\t@tailwind utilities;\n</style>\n\n<script>\n\timport InputForm from './InputForm.svelte';\n\timport Preview from './Preview.svelte';\n\tconst { ipcRenderer } = require('electron');\n\texport let name;\n\texport let version;\n\n\tfunction normalizeDimensions(rp, max) {\n\t\tlet dim = Object.assign({}, rp.dim);\n\t\t// Save invariant properties\n\t\tlet _top = dim.top, _left = dim.left;\n\t\tdelete dim.top;\n\t\tdelete dim.left;\n\t\tconst maxVal = Object.keys(dim).reduce((acc, cur) => {\n\t\t\treturn Math.max(acc, dim[cur]);\n\t\t}, 0);\n\t\tfor(const prop in dim){\n\t\t\tdim[prop] = dim[prop] / maxVal * max;\n\t\t}\n\t\trp.normalDim = dim;\n\t\t// Restore invariant properties\n\t\trp.normalDim.top = _top;\n\t\trp.normalDim.left = _left;\n\t\tconsole.log('RP', rp);\n\t\tconsole.log('DIM', dim);\n\t}\n\n\tlet renderPresets = [\n\t\t{\n\t\t\ttype: 0,\n\n\t\t\tdim: {\n\t\t\t\ttop: 30,\n\t\t\t\tleft: 30,\n\t\t\t\twidth: 10,\n\t\t\t\theight: 2,\n\t\t\t\tdepth: 3\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tfirst: '#d64c4c',\n\t\t\t\tsecond: '#4f4f4f'\n\t\t\t},\n\t\t\tperspective: 0.19,\n\t\t\tscale: 1,\n\n\t\t\tfileName: 'Magnet-neodim-{type}-{w}x{h}x{d}',\n\t\t\tfileType: 0\n\t\t},\n\t\t{\n\t\t\ttype: 1,\n\n\t\t\tdim: {\n\t\t\t\ttop: 30,\n\t\t\t\tleft: 30,\n\t\t\t\twidth: 15,\n\t\t\t\theight: 6,\n\t\t\t\tradius: 3,\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tfirst: '#d64c4c',\n\t\t\t\tsecond: '#4f4f4f'\n\t\t\t},\n\t\t\tperspective: 0.19,\n\t\t\tscale: 1,\n\n\t\t\tfileName: 'Magnet-neodim-{type}-{w}x{h}-{r}',\n\t\t\tfileType: 0\n\t\t},\n\t\t{\n\t\t\ttype: 2,\n\n\t\t\tdim: {\n\t\t\t\ttop: 30,\n\t\t\t\tleft: 30,\n\t\t\t\twidth: 15,\n\t\t\t\theight: 6,\n\t\t\t\tradius: 6,\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tfirst: '#d64c4c',\n\t\t\t\tsecond: '#4f4f4f'\n\t\t\t},\n\t\t\tperspective: 0.19,\n\t\t\tscale: 1,\n\n\t\t\tfileName: 'Magnet-neodim-{type}-{w}x{h}',\n\t\t\tfileType: 0\n\t\t}\n\t];\n\n\tlet svg = '';\n\tlet renderParams = Object.assign({}, renderPresets[0]);\n\n\t$: {\n\t\tconsole.log('Reactive normalization');\n\t\tnormalizeDimensions(renderParams, 350);\n\t}\n\n\tfunction save(){\n\t\tipcRenderer.send('save-rp', renderParams);\n\t}\n\n\tfunction load(){\n\t\tipcRenderer.send('load-rp');\n\t}\n\n\tipcRenderer.on('rp', (e, args) => {\n\t\trenderParams = args;\n\t});\n\n\tfunction exportImg(){\n\t\tipcRenderer.send('export-img', {\n\t\t\trenderParams,\n\t\t\tsvg: svg.outerHTML\n\t\t});\n\t}\n\n\tfunction newType(){\n\t\tconsole.log('New type', renderParams.type);\n\t\tconsole.log('Render presets', renderPresets);\n\t\trenderParams = Object.assign({}, renderPresets[renderParams.type]);\n\t\tconsole.log('Render params', renderParams);\n\t}\n</script>\n\n<main class=\"h-full\">\n\t<div class=\"flex flex-col md:flex-row flex-wrap md:flex-nowrap\">\n\t\t<div id=\"left\" class=\"flex flex-col flex-wrap space-y-6 md:w-1/3\">\n\t\t\t<div class=\"container text-center\">\n\t\t\t\t<h1>{name} v{version}</h1>\n\t\t\t</div>\n\t\t\t<InputForm bind:rp={renderParams} on:save={save} on:exportimg={exportImg} on:load={load} on:newtype={newType} />\n\t\t</div>\n\t\t<div id=\"right\" class=\"md:w-2/3 pl-2\">\n\t\t\t<Preview bind:renderParams={renderParams} bind:svg={svg} />\n\t\t</div>\n\t</div>\n</main>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'MagnetRender',\n\t\tversion: '0.0.3'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","i","length","option","__value","selected","selectedIndex","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","label","onchange","selected_option","querySelector","unit","hint","step","min","dim","width","height","radius","depth","perspective","scale","left","top","colors","first","second","fileName","fileType","dispatch","rp","cos","sin","alpha","top_height","top_width","ll_h","ll_w","svg","renderParams","normalDim","PI","darken","hex","lum","String","replace","rgb","parseInt","substr","round","toString","rad_y","inner_y","ttop","ipcRenderer","require","version","renderPresets","on","args","console","log","_top","_left","maxVal","reduce","acc","cur","prop","normalizeDimensions","send","outerHTML","body"],"mappings":"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"}